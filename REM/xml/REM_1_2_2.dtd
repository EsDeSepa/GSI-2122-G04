<!-- ========================================= -->
<!-- File    : REM_1_2_1.dtd                   -->
<!-- Author  : Amador Duran Toro               -->
<!-- Date    : 2002/08/19                      -->
<!-- Version : 1.2.1                           -->
<!-- ========================================= -->
<!-- Last update : 2002/08/19                  -->
<!-- rem:changeRequestsStatusValue ->          -->
<!-- rem:changeRequestStatusValue              -->
<!-- ========================================= -->
<!-- Last update : 2002/05/29                  -->
<!-- BR -> br                                  -->
<!-- Namespace URI has changed                 -->
<!-- ========================================= -->

<!-- The followed pattern is: use attributes   -->
<!-- only for metainformation or for IDREF(S)  -->

<!-- ========================================= -->
<!-- ENTITIES (i.e. macros)                    -->
<!-- ========================================= -->

<!-- These are all possible SpecificationObjects -->
<!-- that can appear in a SpecificationDocument  -->

<!ENTITY % SpecificationObjects
    "rem:section                  | 
     rem:paragraph                | 
     rem:graphicFile              |
     rem:glossaryItem             | 
     rem:organization             | 
     rem:stakeholder              | 
     rem:meeting                  | 
     rem:objective                | 
     rem:actor                    |
     rem:informationRequirement   |
     rem:constraintRequirement    |
     rem:useCase                  |
     rem:functionalRequirement    |
     rem:nonFunctionalRequirement |
     rem:objectType               |
     rem:userDefinedValueType     |
     rem:associationType          |
     rem:systemOperation          |
	 rem:conflict                 |
     rem:defect                   |
	 rem:changeRequest            |
     rem:traceabilityMatrix"
>

<!-- This is the basic structure of a SpecificationDocument -->

<!ENTITY % SpecificationDocument
    "rem:name, 
     rem:version,
     rem:comments?,
     rem:preparedFor?,
     rem:preparedBy?,
     (%SpecificationObjects;)*,
     rem:change*"
>

<!-- This is the OID attribute declaration -->

<!ENTITY % OID
    "oid ID #REQUIRED"
>

<!-- This is the text structure in REM -->

<!ENTITY % REM_TEXT
    "(#PCDATA | rem:ref | rem:tbd | br )*"
>

<!-- This is the basic structure of a SpecificationObject -->

<!ENTITY % SpecificationObject
    "rem:name,
     rem:version, 
     rem:authors?, 
     rem:sources?,
     rem:comments?,
     rem:change*"
>

<!-- This is the basic structure of a C-Requirement -->

<!ENTITY % C_Requirement
    "(%SpecificationObject;),
    rem:importance,
    rem:urgency,
    rem:status,
    rem:stability"
>

<!-- This is the basic structure of a D-Requirement -->

<!ENTITY % D_Requirement
    "(%SpecificationObject;),
    rem:description,
    rem:stereotype?"
>

<!-- This is the basic structure of a Type -->

<!ENTITY % Type
    "(%D_Requirement;),
    rem:invariantExpression*,
    rem:attribute*"
>

<!-- This is the basic structure of a Property -->

<!ENTITY % Property
    "rem:name,
     rem:description,
     ((rem:isSet|rem:isSequence|rem:isBag), rem:multiplicity)?,
     rem:comments"
>

<!-- ========================================= -->
<!-- ELEMENTS                                  -->
<!-- ========================================= -->

<!-- ========================================= -->
<!-- rem:requirementsProject (root)            -->
<!-- ========================================= -->

<!-- A requirements project has a name and it is   -->
<!-- composed by a CRS, a DRS, a CFS, a CHS,       --> 
<!-- some traces, some predefined values types and -->
<!-- some predefined values                        -->

<!ELEMENT rem:requirementsProject ( 
    rem:name,
    rem:c_requirementsSpecification, 
    rem:d_requirementsSpecification, 
    rem:defectsSpecification,
	rem:changeRequestsSpecification,
    rem:trace*,
    rem:predefinedValueTypes,
    rem:predefinedValues
)>

<!-- DTDs and namespaces don't like each other -->

<!-- REM 1.2

<!ATTLIST rem:requirementsProject 
    xmlns:rem CDATA "http://www.lsi.us.es/~amador/REM">

REM 1.2 -->

<!ATTLIST rem:requirementsProject 
    xmlns:rem CDATA #REQUIRED
>

<!-- ========================================= -->
<!-- rem:text, rem:ref, rem:tbd, br            -->
<!-- ========================================= -->

<!-- rem:text is a part of many elements        -->
<!-- In REM, text can be composed of free text, -->
<!-- references to other elements or TBD        -->

<!ELEMENT rem:text %REM_TEXT; >

<!-- rem:ref is a part of rem:text and many others -->

<!ELEMENT rem:ref (#PCDATA)>
<!ATTLIST rem:ref oid IDREF #REQUIRED>

<!-- rem:tbd is a part of rem:text and many others -->

<!ELEMENT rem:tbd EMPTY>

<!-- br is the well-know HTML Break Line tag -->

<!ELEMENT br EMPTY>

<!-- ========================================= -->
<!-- rem:name                                  -->
<!-- ========================================= -->

<!-- rem:name is a part of many elements -->

<!ELEMENT rem:name %REM_TEXT; >

<!-- ========================================= -->
<!-- rem:c_requirementsSpecification           -->
<!-- ========================================= -->

<!-- A C-Requirements Specification is a Specification Document -->

<!ELEMENT rem:c_requirementsSpecification (
    %SpecificationDocument;
)>

<!ATTLIST rem:c_requirementsSpecification %OID; >

<!-- ========================================= -->
<!-- rem:d_requirementsSpecification           -->
<!-- ========================================= -->

<!-- A D-Requirements Specification is a Specification Document -->

<!ELEMENT rem:d_requirementsSpecification (
    %SpecificationDocument;
)>

<!ATTLIST rem:d_requirementsSpecification %OID; >

<!-- ========================================= -->
<!-- rem:defectsSpecification                  -->
<!-- ========================================= -->

<!-- A Defects Specification is a Specification Document -->

<!ELEMENT rem:defectsSpecification (
    %SpecificationDocument;
)>

<!ATTLIST rem:defectsSpecification %OID; >

<!-- ========================================= -->
<!-- rem:changeRequestsSpecification           -->
<!-- ========================================= -->

<!-- A Change Request Specification is a Specification Document -->

<!ELEMENT rem:changeRequestsSpecification (
    %SpecificationDocument;
)>

<!ATTLIST rem:changeRequestsSpecification %OID; >

<!-- ========================================= -->
<!-- rem:trace                                 -->
<!-- ========================================= -->

<!-- A trace is a part of a Requirements Project -->
<!-- that may be checked or not                  -->

<!ELEMENT rem:trace (
    rem:isChecked?
)>

<!-- A trace must have a source and a target -->

<!ATTLIST rem:trace
    source IDREF #REQUIRED
    target IDREF #REQUIRED
>

<!ELEMENT rem:isChecked EMPTY>

<!-- ========================================= -->
<!-- rem:version                               -->
<!-- ========================================= -->

<!-- rem:version is a part of many elements -->
<!-- rem:version must have a major number, a minor number and a date -->

<!ELEMENT rem:version (rem:major, rem:minor, rem:date)>
<!ELEMENT rem:major (#PCDATA)>
<!ELEMENT rem:minor (#PCDATA)>

<!ELEMENT rem:date  (rem:year,rem:month,rem:day)>
<!ELEMENT rem:year  (#PCDATA)>
<!ELEMENT rem:month (#PCDATA)>
<!ELEMENT rem:day   (#PCDATA)>

<!-- ========================================= -->
<!-- rem:preparedFor                           -->
<!-- ========================================= -->

<!-- rem:preaparedFor is a part of a Specification Document -->

<!ELEMENT rem:preparedFor EMPTY>

<!-- that must refer to some organizations -->

<!ATTLIST rem:preparedFor
    organizations IDREFS #REQUIRED
>

<!-- ========================================= -->
<!-- rem:preparedBy                            -->
<!-- ========================================= -->

<!-- rem:preaparedBy is a part of a Specification Document -->

<!ELEMENT rem:preparedBy EMPTY>

<!-- that must refer to some organizations -->

<!ATTLIST rem:preparedBy
    organizations IDREFS #REQUIRED
>

<!-- ========================================= -->
<!-- rem:comments                              -->
<!-- ========================================= -->

<!-- rem:comments is a part of many elements -->

<!ELEMENT rem:comments %REM_TEXT; >

<!-- ========================================= -->
<!-- rem:change                                -->
<!-- ========================================= -->

<!ELEMENT rem:change (
    rem:type,
    rem:date,
    rem:description
)>

<!ELEMENT rem:type (#PCDATA)>

<!-- ========================================= -->
<!-- rem:authors                               -->
<!-- ========================================= -->

<!-- rem:authors is a part of all Specification Objects -->

<!ELEMENT rem:authors EMPTY>

<!-- rem:authors must refer to some stakeholders -->

<!ATTLIST rem:authors
    stakeholders IDREFS #REQUIRED
>

<!-- ========================================= -->
<!-- rem:sources                               -->
<!-- ========================================= -->

<!-- rem:sources is a part of all Specification Objects -->

<!ELEMENT rem:sources EMPTY>

<!-- rem:sources must refer to some stakeholders -->

<!ATTLIST rem:sources
    stakeholders IDREFS #REQUIRED
>

<!-- ========================================= -->
<!-- rem:section                               -->
<!-- ========================================= -->

<!-- A section is a specification object with level and        -->
<!-- number and can contain any kind of specification objetcts -->

<!ELEMENT rem:section ( 
    (%SpecificationObject;),
    rem:level,
    rem:number,
    (%SpecificationObjects;)*
)>

<!ATTLIST rem:section %OID; >

<!ELEMENT rem:level  (#PCDATA)>
<!ELEMENT rem:number (#PCDATA)>

<!-- ========================================= -->
<!-- rem:paragraph                             -->
<!-- ========================================= -->

<!-- A paragraph is a specification object that has some text inside -->

<!ELEMENT rem:paragraph ( 
    (%SpecificationObject;),
    rem:text 
)>

<!ATTLIST rem:paragraph %OID; >

<!-- ========================================= -->
<!-- rem:glossaryItem                          -->
<!-- ========================================= -->

<!-- A glossary item is a specification object that has some text inside -->

<!ELEMENT rem:glossaryItem ( 
    (%SpecificationObject;),
    rem:text
)>

<!ATTLIST rem:glossaryItem %OID; >

<!-- ========================================= -->
<!-- rem:graphicFile                           -->
<!-- ========================================= -->

<!-- A graphic file is a specification object that -->
<!-- represents an external graphic file           -->

<!ELEMENT rem:graphicFile (
    (%SpecificationObject;),
    rem:fileName 
)>

<!ATTLIST rem:graphicFile %OID; >

<!ELEMENT rem:fileName (#PCDATA)>

<!-- ========================================= -->
<!-- rem:organization                          -->
<!-- ========================================= -->

<!-- An organization is a specification object -->
<!-- that has address, telephone and fax       -->

<!ELEMENT rem:organization ( 
    (%SpecificationObject;), 
    rem:address,
    rem:telephone,
    rem:fax 
)>

<!ATTLIST rem:organization %OID; >

<!ELEMENT rem:address   %REM_TEXT; >
<!ELEMENT rem:telephone %REM_TEXT; >
<!ELEMENT rem:fax       %REM_TEXT; >

<!-- ========================================= -->
<!-- rem:stakeholder                           -->
<!-- ========================================= -->

<!-- A stakeholder is a specification object that has  -->
<!-- a role, and is a developer, a customer or an user -->
<!-- and may work for some organization                -->

<!ELEMENT rem:stakeholder ( 
    (%SpecificationObject;),
    rem:stakeholderRole,
    rem:isDeveloper?,
    rem:isCustomer?,
    rem:isUser?,
    rem:worksFor?
)>

<!ATTLIST rem:stakeholder %OID; >

<!ELEMENT rem:stakeholderRole %REM_TEXT; >

<!ELEMENT rem:isDeveloper EMPTY>
<!ELEMENT rem:isCustomer  EMPTY>
<!ELEMENT rem:isUser      EMPTY>

<!-- rem:worksFor must refer to some organization -->

<!ELEMENT rem:worksFor EMPTY>
<!ATTLIST rem:worksFor 
    organization IDREF #REQUIRED
>

<!-- ========================================= -->
<!-- rem:meeting                               -->
<!-- ========================================= -->

<!-- A meeting is a specification object that has  -->
<!-- date, time, place, results and some attenders -->

<!ELEMENT rem:meeting ( 
    (%SpecificationObject;),
    rem:date,
    rem:time,
    rem:place,
    rem:results,
    rem:attenders?
)>

<!ATTLIST rem:meeting %OID;>

<!-- rem:date is already defined -->
<!ELEMENT rem:time   (rem:hour, rem:minute, rem:second?)>
<!ELEMENT rem:hour   (#PCDATA)>
<!ELEMENT rem:minute (#PCDATA)>
<!ELEMENT rem:second (#PCDATA)>

<!ELEMENT rem:place   %REM_TEXT; >
<!ELEMENT rem:results %REM_TEXT; >

<!-- rem:attenders must refer to some stakeholders -->
<!ELEMENT rem:attenders EMPTY>
<!ATTLIST rem:attenders
    stakeholders IDREFS #REQUIRED
>

<!-- ========================================= -->
<!-- rem:actor                                 -->
<!-- ========================================= -->

<!-- An actor is a specification object that has a role -->

<!ELEMENT rem:actor ( 
    (%SpecificationObject;),
    rem:actorRole 
)>

<!ATTLIST rem:actor %OID; >

<!ELEMENT rem:actorRole %REM_TEXT; >

<!-- ========================================= -->
<!-- Parts of C-Requirements                   -->
<!-- ========================================= -->

<!-- All these parts of C-Requirements must refer -->
<!-- to some value or contain a rem:tbd           -->

<!ELEMENT rem:importance (rem:tbd)?>
<!ATTLIST rem:importance value IDREF #IMPLIED>

<!ELEMENT rem:urgency (rem:tbd)?>
<!ATTLIST rem:urgency value IDREF #IMPLIED>

<!ELEMENT rem:status (rem:tbd)?>
<!ATTLIST rem:status value IDREF #IMPLIED>

<!ELEMENT rem:stability (rem:tbd)?>
<!ATTLIST rem:stability value IDREF #IMPLIED>

<!ELEMENT rem:timeUnit (rem:tbd)?>
<!ATTLIST rem:timeUnit value IDREF #IMPLIED>

<!-- ========================================= -->
<!-- rem:objective                             -->
<!-- ========================================= -->

<!-- An objective is a C-Requirement that has a description -->

<!ELEMENT rem:objective ( 
    (%C_Requirement;),
    rem:description,
    rem:objective*
)>

<!ATTLIST rem:objective %OID; >

<!ELEMENT rem:description %REM_TEXT; >

<!-- ========================================= -->
<!-- rem:informationRequirement                -->
<!-- ========================================= -->

<!-- An information requirement is a C-Requirement that has a -->
<!-- relevant concept, average and maximum lifetime, average  -->
<!-- and maximum number of simultaneous ocurrences and some   -->
<!-- specific data                                            -->

<!ELEMENT rem:informationRequirement (
    (%C_Requirement;),
    rem:relevantConcept,
    rem:averageLifeTime,
    rem:maximumLifeTime,
    rem:averageOcurrences,
    rem:maximumOcurrences,
    rem:specificData* 
)>

<!ATTLIST rem:informationRequirement %OID; >

<!ELEMENT rem:relevantConcept %REM_TEXT; >

<!ELEMENT rem:averageLifeTime (
    ( rem:value, rem:timeUnit ) | rem:tbd
)>

<!ELEMENT rem:maximumLifeTime (
    ( rem:value, rem:timeUnit ) | rem:tbd
)>

<!ELEMENT rem:averageOcurrences (
    rem:value | rem:tbd
)>

<!ELEMENT rem:maximumOcurrences (
    rem:value | rem:tbd
)>

<!ELEMENT rem:value %REM_TEXT; >

<!ELEMENT rem:specificData ( 
    rem:description,
    rem:comments 
)>

<!ATTLIST rem:specificData %OID; >

<!-- rem:description and rem:comments are already defined -->

<!-- ========================================= -->
<!-- rem:constraintRequirement                 -->
<!-- ========================================= -->

<!-- A constraint requirement is a C-Requirement that -->
<!-- has a description                                -->

<!ELEMENT rem:constraintRequirement ( 
    (%C_Requirement;),
    rem:description
)>

<!ATTLIST rem:constraintRequirement %OID;>

<!-- rem:description is already defined -->

<!-- ========================================= -->
<!-- rem:useCase                               -->
<!-- ========================================= -->

<!-- An an use case is a C-Requirement  that can be abstract -->
<!-- and has a triggering event, a precondition,             -->
<!-- a postcondition, an expected frequency and some steps   -->

<!ELEMENT rem:useCase ( 
    %C_Requirement;,
    rem:isAbstract?,
    rem:triggeringEvent,
    rem:precondition,
    rem:postcondition,
    rem:frequency,
    rem:step*
)>

<!ATTLIST rem:useCase %OID; >

<!ELEMENT rem:isAbstract EMPTY>
<!ELEMENT rem:triggeringEvent %REM_TEXT; >
<!ELEMENT rem:precondition    %REM_TEXT; >
<!ELEMENT rem:postcondition   %REM_TEXT; >

<!ELEMENT rem:frequency (
    ( rem:value, rem:timeUnit ) | rem:tbd
)>

<!-- rem:value is already defined -->

<!-- Every step of an use case has a number, may have a condition, -->
<!-- has a system, actor o use case action and have some comments  -->

<!ELEMENT rem:step ( 
    rem:number,
    rem:condition?,  
    ( rem:systemAction | rem:actorAction | rem:useCaseAction ),
    ( rem:stepException* ),
    rem:comments 
)>

<!ATTLIST rem:step %OID; >

<!ELEMENT rem:condition %REM_TEXT; >

<!ELEMENT rem:systemAction (
    rem:description,
    rem:performance?
)>

<!-- rem:description is already defined -->

<!ELEMENT rem:performance (
    rem:value,
    rem:timeUnit
)>

<!ELEMENT rem:actorAction (
    rem:description   
)>
<!-- rem:description is already defined -->

<!ATTLIST rem:actorAction
    actor IDREF #REQUIRED
>

<!ELEMENT rem:useCaseAction EMPTY>

<!ATTLIST rem:useCaseAction
    useCase IDREF #REQUIRED
>

<!ELEMENT rem:stepException (
    rem:condition,
    ( rem:systemAction | rem:actorAction | rem:useCaseAction ),
    rem:termination,
    rem:comments
)>

<!ATTLIST rem:stepException %OID; >

<!ELEMENT rem:termination (rem:tbd)?>
<!ATTLIST rem:termination value IDREF #IMPLIED>

<!-- ========================================= -->
<!-- rem:functionalRequirement                 -->
<!-- ========================================= -->

<!-- An functional requirement is a C-Requirement that -->
<!-- has a description                                 -->

<!ELEMENT rem:functionalRequirement ( 
    (%C_Requirement;),
    rem:description
)>

<!ATTLIST rem:functionalRequirement %OID;>

<!-- ========================================= -->
<!-- rem:nonfunctionalRequirement               -->
<!-- ========================================= -->

<!-- An non functional requirement is a C-Requirement that -->
<!-- has a description                                     -->

<!ELEMENT rem:nonFunctionalRequirement ( 
    (%C_Requirement;),
    rem:description
)>

<!ATTLIST rem:nonFunctionalRequirement %OID;>

<!-- ========================================= -->
<!-- rem:objectType                            -->
<!-- ========================================= -->

<!-- An object type is a type, i.e. a D-Requirement, -->
<!-- that can be abstract and may have disjoint or   -->
<!-- overlapping subtypes                            -->

<!ELEMENT rem:objectType ( 
    (%Type;),
    rem:component*,
    rem:isAbstract?,
    rem:disjointSubtypes?
)>

<!ATTLIST rem:objectType 
    %OID;
    supertype IDREF #IMPLIED
>

<!-- rem:isAbstract is already defined -->

<!ELEMENT rem:disjointSubtypes EMPTY>

<!ELEMENT rem:stereotype %REM_TEXT; >

<!-- An attribute/component is a property that can be constant, -->
<!-- variable with an optional initial value expression,        -->
<!-- or derived with a derivation expression                    -->

<!ELEMENT rem:attribute (
    (%Property;),
    ( rem:isConstant | (rem:isVariable,rem:expression?) | (rem:isDerived,rem:expression) )
)>

<!ELEMENT rem:component (
    (%Property;),
    ( rem:isConstant | (rem:isVariable,rem:expression?) | (rem:isDerived,rem:expression) )
)>

<!-- attributes/components have a base type -->

<!ATTLIST rem:attribute
    %OID;
    baseType IDREF #REQUIRED
>

<!ATTLIST rem:component
    %OID;
    baseType IDREF #REQUIRED
>

<!ELEMENT rem:isSet      EMPTY>
<!ELEMENT rem:isSequence EMPTY>
<!ELEMENT rem:isBag      EMPTY>

<!ELEMENT rem:multiplicity (
    rem:lowerBound,
    rem:upperBound
)>

<!ELEMENT rem:lowerBound %REM_TEXT; >
<!ELEMENT rem:upperBound %REM_TEXT; >

<!ELEMENT rem:isConstant EMPTY>
<!ELEMENT rem:isVariable EMPTY>
<!ELEMENT rem:isDerived  EMPTY>

<!-- An invariant expression is a commented expression -->

<!ELEMENT rem:invariantExpression ( 
    rem:name,
    rem:expression, 
    rem:comments 
)>

<!ATTLIST rem:invariantExpression
    %OID;
>

<!ELEMENT rem:expression (
    rem:natural,
    rem:ocl
)> 

<!ELEMENT rem:natural %REM_TEXT; >
<!ELEMENT rem:ocl     %REM_TEXT; >

<!-- ========================================= -->
<!-- rem:userDefinedValueType                  -->
<!-- ========================================= -->

<!-- An user defined value type is Type, i.e. a D-Requirement, -->
<!-- with a definition                                         -->

<!ELEMENT rem:userDefinedValueType ( 
    (%Type;),
    rem:definition 
)>

<!ATTLIST rem:userDefinedValueType %OID;>

<!ELEMENT rem:definition %REM_TEXT; >

<!-- ========================================= -->
<!-- rem:associationType                       -->
<!-- ========================================= -->

<!-- An associationType is Type, i.e. a D-Requirement, -->
<!-- that can be derived and has some roles            -->

<!ELEMENT rem:associationType ( 
    (%Type;),
    rem:isDerived?,
    rem:role*
)>

<!ATTLIST rem:associationType %OID;>

<!-- A role is a property that can be constant,          -->
<!-- variable with an optional initial value expression, -->
<!-- or derived with a derivation expression             -->

<!ELEMENT rem:role (
    (%Property;),
    ( rem:isConstant | (rem:isVariable,rem:expression?) | (rem:isDerived,rem:expression) ),
    rem:isWhole?
)>

<!-- rem:roles have a base type -->

<!ATTLIST rem:role
    %OID;
    baseType IDREF #REQUIRED
>

<!-- ========================================= -->
<!-- rem:systemOperation                       -->
<!-- ========================================= -->

<!-- A SystemOperation is a D-Requirement that may have a result type, -->
<!-- has some parameters, has some precondition exceptions,            -->
<!-- has some postcondition exceptions and has some exceptions         -->

<!ELEMENT rem:systemOperation (
    (%D_Requirement;),
    rem:resultType?,
    rem:parameter*,
    rem:preconditionExpression*,
    rem:postconditionExpression*,
    rem:operationException*
)>

<!ATTLIST rem:systemOperation %OID;>

<!ELEMENT rem:resultType %REM_TEXT; >

<!-- A rem:parameter is a property -->

<!ELEMENT rem:parameter (
    (%Property;)
)>

<!-- rem:parameters have a base type -->

<!ATTLIST rem:parameter
    %OID;
    baseType IDREF #REQUIRED
>

<!-- An Preconditionrem:expression is a named expression -->

<!ELEMENT rem:preconditionExpression ( 
    rem:name,
    rem:expression,
    rem:comments
)>

<!ATTLIST rem:preconditionExpression
    %OID;
>

<!-- An Postconditionrem:expression is a named expression -->

<!ELEMENT rem:postconditionExpression ( 
    rem:name,
    rem:expression,
    rem:comments
)>

<!ATTLIST rem:postconditionExpression
    %OID;
>

<!-- An OperationException is a named condition + expression -->

<!ELEMENT rem:operationException ( 
    rem:name,
    rem:operationCondition,
    rem:expression,
    rem:comments
)>

<!ATTLIST rem:operationException
    %OID;
>

<!-- An OperationCondition is an expression -->

<!ELEMENT rem:operationCondition (
    rem:expression
)>

<!-- ========================================= -->
<!-- rem:conflict                              -->
<!-- ========================================= -->

<!-- A conflict is a SpecificationObject that has        -->
<!-- description, solution, status, importance, urgency, -->
<!-- description and solution and may have some          --> 
<!-- alternatives                                        -->

<!ELEMENT rem:conflict ( 
    (%SpecificationObject;),
    rem:description,
    rem:solution,
	rem:directlyAffects?,
	rem:indirectlyAffects?,
    rem:status,
    rem:importance,
    rem:urgency,
    rem:alternative*
)>

<!ATTLIST rem:conflict %OID;>

<!ELEMENT rem:solution %REM_TEXT; >

<!ELEMENT rem:directlyAffects EMPTY>
<!ATTLIST rem:directlyAffects affected IDREFS #REQUIRED>

<!ELEMENT rem:indirectlyAffects EMPTY>
<!ATTLIST rem:indirectlyAffects affected IDREFS #REQUIRED>

<!ELEMENT rem:alternative (
    rem:name,
    rem:description,
    rem:authors?,
    rem:comments
)>

<!ATTLIST rem:alternative %OID;>

<!-- ========================================= -->
<!-- rem:defect                                -->
<!-- ========================================= -->

<!-- A defect is a SpecificationObject that has  -->
<!-- defectType, status, importance, urgency,    -->
<!-- description and solution and may have some  --> 
<!-- alternatives                                -->

<!ELEMENT rem:defect ( 
    (%SpecificationObject;),
    rem:description,
    rem:solution,
    rem:defectType,
	rem:directlyAffects?,
	rem:indirectlyAffects?,
    rem:status,
    rem:importance,
    rem:urgency,
    rem:alternative*
)>

<!ATTLIST rem:defect %OID;>

<!ELEMENT rem:defectType (rem:tbd)?>
<!ATTLIST rem:defectType value IDREF #IMPLIED>

<!-- ========================================= -->
<!-- rem:changeRequest                         -->
<!-- ========================================= -->

<!-- A change request is a SpecificationObject   -->
<!-- that has status, importance, urgency,       -->
<!-- description and analysis                    -->

<!ELEMENT rem:changeRequest ( 
    (%SpecificationObject;),
    rem:description,
    rem:analysis,
	rem:directlyAffects?,
	rem:indirectlyAffects?,
    rem:status,
    rem:importance,
    rem:urgency
)>

<!ATTLIST rem:changeRequest %OID;>

<!ELEMENT rem:analysis %REM_TEXT; >

<!-- ========================================= -->
<!-- rem:traceabilityMatrix                    -->
<!-- ========================================= -->

<!-- A traceability matrix is a SpecificationObject --> 
<!-- that has some tr (table rows)                  -->

<!ELEMENT rem:traceabilityMatrix (
    (%SpecificationObject;),
    rem:tr*
)>

<!ATTLIST rem:traceabilityMatrix %OID;>

<!ELEMENT rem:tr (rem:th|rem:td)*>

<!ELEMENT rem:th EMPTY>
<!ATTLIST rem:th oid IDREF #IMPLIED>

<!ELEMENT rem:td EMPTY>
<!ATTLIST rem:td mark (yes|no) #REQUIRED>

<!-- ========================================= -->
<!-- rem:predefinedValueTypes                  -->
<!-- ========================================= -->

<!ELEMENT rem:predefinedValueTypes (
    rem:predefinedValueType*
)>

<!ELEMENT rem:predefinedValueType ( 
    (%Type;),
    rem:definition 
)>

<!ATTLIST rem:predefinedValueType %OID;>

<!-- ========================================= -->
<!--  rem:predefinedValues (of many types)     -->
<!-- ========================================= -->

<!ELEMENT rem:predefinedValues (
    ( 
      rem:changeRequestStatusValue |
	  rem:conflictStatusValue      |
      rem:defectStatusValue		   |
      rem:defectTypeValue		   |
      rem:importanceValue		   |   
      rem:stabilityValue		   |
      rem:statusValue			   |   
      rem:terminationValue		   | 
      rem:timeIntervalValue		   |
      rem:timeUnitValue			   |
      rem:urgencyValue
    )*
)>

<!-- All types of values must have a name -->

<!ELEMENT rem:changeRequestStatusValue (rem:name)>
<!ATTLIST rem:changeRequestStatusValue %OID;>

<!ELEMENT rem:conflictStatusValue (rem:name)>
<!ATTLIST rem:conflictStatusValue %OID;>

<!ELEMENT rem:defectStatusValue (rem:name)>
<!ATTLIST rem:defectStatusValue %OID;>

<!ELEMENT rem:defectTypeValue (rem:name, rem:description)>
<!ATTLIST rem:defectTypeValue %OID;>

<!ELEMENT rem:importanceValue (rem:name)>
<!ATTLIST rem:importanceValue %OID;>

<!ELEMENT rem:stabilityValue (rem:name)>
<!ATTLIST rem:stabilityValue %OID;>

<!ELEMENT rem:statusValue (rem:name)>
<!ATTLIST rem:statusValue %OID;>

<!ELEMENT rem:terminationValue (rem:name)>
<!ATTLIST rem:terminationValue %OID;>

<!ELEMENT rem:timeIntervalValue (rem:name)>
<!ATTLIST rem:timeIntervalValue %OID;>

<!ELEMENT rem:timeUnitValue (rem:name)>
<!ATTLIST rem:timeUnitValue %OID;>

<!ELEMENT rem:urgencyValue (rem:name)>
<!ATTLIST rem:urgencyValue %OID;>
